md.set(thing_classes=['Caption', 'Footnote', 'Formula', 'List-item', 'Pagefooter', 'Page-header', 'Picture', 'Section-header', 'Table', 'Text','Title', 'Handwriting', 'Stamps'])

TSR: 
DCL DATA
	1. Images: https://drive.google.com/file/d/1Uy-gRaQ8Biv59cvzKMJcWGllipCO8Ofz/view?usp=drive_link
	2. Annotation : https://drive.google.com/file/d/1VeSMjdCjR5iMUMOi7ONoheAJUxKoUT_C/view?usp=drive_link 
TSR MODEL<DEVARSH 3/29> : https://drive.google.com/file/d/1ogC_BugyIVzYAroCW7mBUrHhIyFMT7hj/view?usp=sharing 



import os
import random
import csv

# Directory path
directory = '/path/to/your/directory'

# Get list of files in the directory
files = os.listdir(directory)

# Randomly select 500 files
selected_files = random.sample(files, 500)

# CSV file to store the selected filenames
csv_file = 'selected_files.csv'

# Write selected filenames to CSV
with open(csv_file, 'w', newline='') as csvfile:
    csv_writer = csv.writer(csvfile)
    csv_writer.writerow(['Filename'])
    for file in selected_files:
        csv_writer.writerow([file])

print("Selected filenames saved to:", csv_file)


if debug:
                    
    ocr_save_path = f"{OCR_SAVE_DIR}/{SAVE_DIR.split('/')[-1]}/{pdf.split('/')[-1].split('.')[0]}/page-{i}"
    if not os.path.exists(ocr_save_path):
        os.makedirs(ocr_save_path, exist_ok=True)
    
    bounding_boxes = dit_output.get('jsonData', {}).get('boxes', [])
    classes = dit_output.get('jsonData', {}).get('classes', []) 
    texts = dit_output['jsonData']["extracted_text"]
    for idx, bbox in enumerate(bounding_boxes):
        if classes[idx] in ["Table", "Picture"]:
            continue
        left, top, right, bottom = bbox   
        image = aligned_image.crop((left,top,right,bottom))
        image.save(f"{ocr_save_path}/{idx}.jpg")
        extracted_texts.append({
            "image": f"page-{i}/{idx}.jpg",
            "page_no": i,
            "text": texts[idx].replace("<p>", "").replace("</p>", "\n").strip()
        })



if debug:
        file_name = pdf.split('/')[-1].split(".")[0]
        df = pd.DataFrame.from_dict(extracted_texts)
        tables_df_list = [pd.read_csv(f"{OCR_SAVE_DIR}/{SAVE_DIR.split('/')[-1]}/{pdf.split('/')[-1].split('.')[0]}/page-{i}/table_ocr.csv") for i in range(len(self.images))]
        
        combined_df_list = [df] + tables_df_list
        combined_df = pd.concat(combined_df_list, ignore_index=True)
        combined_df.to_csv(os.path.join(OCR_SAVE_DIR, SAVE_DIR.split('/')[-1], pdf.split('/')[-1].split('.')[0], f"{file_name}.csv"), index=False)