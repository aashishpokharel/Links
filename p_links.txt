aligned_images = self.get_aligned(self.images)
            for i, image in enumerate(aligned_images):


def get_aligned(self, images):
        start_time = time.time()
        corrected_images = [correct_orientation(self.orientation_model, self.device, np.array(img)) for img in images]
        print("Orientation model time", time.time() - start_time)
        start_time = time.time()
        # aligned_images = [alignment_model_inference(self.alignment_model, self.device,
        #                                           [img]) for img in corrected_images]
        aligned_images = alignment_model_inference(self.alignment_model, self.device,
                                                  corrected_images)
        print("Alignment model time", time.time() - start_time)
        
        encoded_images = []
        for aligned_image in aligned_images:
            image_pil = Image.fromarray(aligned_image)        
            image_bytes = io.BytesIO()
            image_pil.save(image_bytes, format='png')
            encoded_images.append(base64.b64encode(image_bytes.getvalue()))
        return encoded_images